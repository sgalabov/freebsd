#ifndef _MT762X_PCIVAR_H_
#define _MT762X_PCIVAR_H_

#define MT_READ_REG(reg) \
    *((volatile uint32_t *)MIPS_PHYS_TO_KSEG1((reg)))
 
#define MT_WRITE_REG(reg, val) \
    *((volatile uint32_t *)MIPS_PHYS_TO_KSEG1((reg))) = (val)


#define PCI_INTR_PIN		2

#define MT762X_PCI_NIRQS	3
#define MT762X_PCI_MEM_BASE	0x60000000
#define MT762X_PCI_MEM_SIZE	0x10000000

#define MT762X_PCI_BASE_SLOT	0
#define MT762X_PCI_NUM_SLOTS	3

#define MT762X_PCI_CONF_REG	0x20
#define MT762X_PCI_DATA_REG	0x24
#define MT762X_PCI_BASE_ADDR	0x10

#define MT762X_PCIE0_IRQ	4
#define MT762X_PCIE1_IRQ	24
#define MT762X_PCIE2_IRQ	25

#define MT_WRITE32(ofs, data)	\
	*(volatile uint32_t *)(PCI_BASE+(ofs)) = htole32(*data)
#define MT_WRITE16(ofs, data)	\
	*(volatile uint16_t *)(PCI_BASE+(ofs)) = htole16(*(uint16_t *)(data))
#define MT_WRITE8(ofs, data)	\
	*(volatile uint8_t *)(PCI_BASE+(ofs)) = (*(uint8_t *)(data))

#define MT_READ32(ofs, data)	\
	*(data) = le32toh(*(volatile uint32_t *)(PCI_BASE+(ofs)))
#define MT_READ16(ofs, data)	\
	*(uint16_t *)(data) = le16toh(*(volatile uint16_t *)(PCI_BASE+(ofs)))
#define MT_READ8(ofs, data)	\
	*(uint8_t *)(data) = *(volatile uint8_t *)(PCI_BASE+(ofs))

#define _REG32(x)	*((volatile uint32_t *)(x))
#define RALINK_SYSTEM_CONTROL_BASE	0xbe000000
#define RALINK_PIO_BASE			0xbe000600

#define RALINK_GPIOMODE	_REG32(RALINK_SYSTEM_CONTROL_BASE + 0x60)
#define RALINK_RSTCTRL	_REG32(RALINK_SYSTEM_CONTROL_BASE + 0x34)
#define RALINK_SYSCFG1	_REG32(RALINK_SYSTEM_CONTROL_BASE + 0x14)
#define RALINK_PCIE_CLK_GEN  _REG32(RALINK_SYSTEM_CONTROL_BASE + 0x7c)
#define RALINK_PCIE_CLK_GEN1 _REG32(RALINK_SYSTEM_CONTROL_BASE + 0x80)
#define RALINK_CLKCFG1	_REG32(RALINK_SYSTEM_CONTROL_BASE + 0x30)

#define PCIE_SHARE_PIN_SW		10

#define GPIO_PERST
#if defined(GPIO_PERST)
#define GPIO_PCIE_PORT0			19
#if 0 && (defined(CONFIG_RALINK_I2S) || defined(CONFIG_RALINK_I2S_MODULE))
#define UARTL3_SHARE_PIN_SW		PCIE_SHARE_PIN_SW
#define GPIO_PCIE_PORT1			GPIO_PCIE_PORT0
#define GPIO_PCIE_PORT2			GPIO_PCIE_PORT0
#else
#define UARTL3_SHARE_PIN_SW		3
#define GPIO_PCIE_PORT1			8
#define GPIO_PCIE_PORT2			7
#endif
#define RALINK_GPIO_CTRL0		_REG32(RALINK_PIO_BASE + 0x00)
#define RALINK_GPIO_DATA0		_REG32(RALINK_PIO_BASE + 0x20)
#endif
#define ASSERT_SYSRST_PCIE(val)					\
	do {							\
		if ((_REG32(0xbe00000c) & 0xffff) == 0x0101)	\
			RALINK_RSTCTRL |= val;			\
		else						\
			RALINK_RSTCTRL &= ~val;			\
	} while (0)
#define DEASSERT_SYSRST_PCIE(val)				\
	do {							\
		if ((_REG32(0xbe00000c) & 0xffff) == 0x0101)	\
			RALINK_RSTCTRL &= ~val;			\
		else						\
			RALINK_RSTCTRL |= val;			\
	} while (0)

#define RALINK_PCIE_RST			(1 << 23)
#define RALINK_PCIE0_RST		(1 << 24)
#define RALINK_PCIE1_RST		(1 << 25)
#define RALINK_PCIE2_RST		(1 << 26)
#define RALINK_PCIE0_CLK_EN		(1 << 24)
#define RALINK_PCIE1_CLK_EN		(1 << 25)
#define RALINK_PCIE2_CLK_EN		(1 << 26)

#define RALINK_PCI_PCICFG_ADDR		_REG32(PCI_BASE + 0x0000)

#define RT6855_PCIE0_OFFSET		0x2000
#define RT6855_PCIE1_OFFSET		0x3000
#define RT6855_PCIE2_OFFSET		0x4000

#define RALINK_PCI0_STATUS	_REG32(PCI_BASE + RT6855_PCIE0_OFFSET + 0x0050)
#define RALINK_PCI1_STATUS	_REG32(PCI_BASE + RT6855_PCIE1_OFFSET + 0x0050)
#define RALINK_PCI2_STATUS	_REG32(PCI_BASE + RT6855_PCIE2_OFFSET + 0x0050)
#define RALINK_PCI0_BAR0SETUP_ADDR  _REG32(PCI_BASE + RT6855_PCIE0_OFFSET + 0x0010)
#define RALINK_PCI0_BAR1SETUP_ADDR  _REG32(PCI_BASE + RT6855_PCIE0_OFFSET + 0x0014)
#define RALINK_PCI0_IMBASEBAR0_ADDR _REG32(PCI_BASE + RT6855_PCIE0_OFFSET + 0x0018)
#define RALINK_PCI0_CLASS	_REG32(PCI_BASE + RT6855_PCIE0_OFFSET + 0x0034)
#define RALINK_PCI1_BAR0SETUP_ADDR  _REG32(PCI_BASE + RT6855_PCIE1_OFFSET + 0x0010)
#define RALINK_PCI1_BAR1SETUP_ADDR  _REG32(PCI_BASE + RT6855_PCIE1_OFFSET + 0x0014)
#define RALINK_PCI1_IMBASEBAR0_ADDR _REG32(PCI_BASE + RT6855_PCIE1_OFFSET + 0x0018)
#define RALINK_PCI1_CLASS       _REG32(PCI_BASE + RT6855_PCIE1_OFFSET + 0x0034)
#define RALINK_PCI2_BAR0SETUP_ADDR  _REG32(PCI_BASE + RT6855_PCIE2_OFFSET + 0x0010)
#define RALINK_PCI2_BAR1SETUP_ADDR  _REG32(PCI_BASE + RT6855_PCIE2_OFFSET + 0x0014)
#define RALINK_PCI2_IMBASEBAR0_ADDR _REG32(PCI_BASE + RT6855_PCIE2_OFFSET + 0x0018)
#define RALINK_PCI2_CLASS       _REG32(PCI_BASE + RT6855_PCIE2_OFFSET + 0x0034)

#define RALINK_PCI_PCIMSK_ADDR	_REG32(PCI_BASE + 0x000c)

#define RALINK_PCIEPHY_P0P1_CTL_OFFSET	(PCI_BASE + 0x9000)
#define RALINK_PCIEPHY_P2_CTL_OFFSET	(PCI_BASE + 0xA000)

#define RALINK_PCI_MEMBASE	_REG32(PCI_BASE + 0x28)
#define RALINK_PCI_IOBASE	_REG32(PCI_BASE + 0x2c)

#define RALINK_PCI_PHY_RESET	_REG32(PCI_BASE + 0x8000)
#define RALINK_PCI_PHY_EN	_REG32(PCI_BASE + 0x8004)

#endif /* _MT762X_PCIVAR_H_ */
